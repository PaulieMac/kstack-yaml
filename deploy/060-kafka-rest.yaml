apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-rest
  name: ks-rest
spec:
  ports:
  - name: rest-proxy
    port: 8082
    protocol: TCP
    targetPort: 8082
  selector:
    app: ks-rest
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-rest
  name: ks-rest
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-rest
  template:
    metadata:
      labels:
        app: ks-rest
    spec:
      containers:
      - env:
        - name: KAFKA_REST_HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: KAFKA_REST_BOOTSTRAP_SERVERS
          value: PLAINTEXT://ks-kafka-headless:9092
        - name: KAFKA_REST_ZOOKEEPER_CONNECT
          value: zk-headless:2181
        - name: KAFKA_REST_SCHEMA_REGISTRY_URL
          value: http://schema-reg:8081
        - name: KAFKA_REST_HEAP_OPTS
          value: -Xms512M -Xmx512M
        image: confluentinc/cp-kafka-rest:5.5.0
        imagePullPolicy: IfNotPresent
        name: ks-rest
        ports:
        - containerPort: 8082
          name: rest-proxy
          protocol: TCP
        resources:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30